(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{45728:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return n(28854)}])},28854:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return eA}});var s=n(85893),a=n(1943),i=n.n(a),o=n(67294),r=n(32129),l=n.n(r);let c=(0,o.createContext)();var p=e=>{let{filled:t}=e;return t?(0,s.jsx)("img",{src:"./new.FilledEllipse.svg",alt:"active"}):(0,s.jsx)("img",{src:"./new/Ellipse.svg"})},u=()=>{let{step:e}=(0,o.useContext)(c);return(0,s.jsxs)("h2",{className:l().TitleHeading,children:["Step "+e+" "," ",(0,s.jsx)("span",{className:l().greyText,children:"out of 3"})," "]})},d=()=>{let{step:e,currStep:t}=(0,o.useContext)(c);return(0,s.jsxs)("div",{className:l().CardTitle,children:[e==t?(0,s.jsx)(p,{filled:!0}):(0,s.jsx)(p,{filled:!1}),(0,s.jsx)(u,{})]})},y=n(54306),m=e=>{let{type:t}=e;switch(t){case"map":return(0,s.jsx)("img",{className:l().mapIcon,src:"./new/ETH.png",alt:""});case"swap":return(0,s.jsx)("img",{className:l().swapIcon,src:"./new/ETH.png",alt:""})}},_=e=>{let{type:t}=e;switch(t){case"map":return(0,s.jsx)("img",{className:l().mapIcon,src:"./new/ISC.png",alt:""});case"swap":return(0,s.jsx)("img",{className:l().swapIcon,src:"./new/ISC.png",alt:""})}},h=e=>{let{type:t}=e;switch(t){case"map":return(0,s.jsx)("img",{className:l().mapIcon,src:"./new/EthISC.png",alt:""});case"swap":return(0,s.jsx)("img",{className:l().swapIcon,src:"./new/EthISC.png",alt:""})}},g=e=>{let{type:t}=e;switch(t){case"map":return(0,s.jsx)("img",{className:l().mapIcon,src:"./new/SOL.png",alt:""});case"swap":return(0,s.jsx)("img",{className:l().swapIcon,src:"./new/SOL.png",alt:""})}};let w="swap";var f={buttonPrompts:{eth:"Connect Ethereum Wallet",sol:"Connect Solana Wallet",noAmount:"Please Input An Amount",tooMuch:"Amount Exceeds Balance",waiting:"Awaiting previous step",swap:"Swap",bridge:"Bridge"},solToEth:{activePrompts:["You're swapping","You're Bridging","You're swapping"],inactivePrompts:["To Receive","To Ethereum","To Receive"],tokenIcons:[(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g,{type:w}),(0,s.jsx)(_,{type:w})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g,{type:w}),(0,s.jsx)(h,{type:w})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m,{type:w}),(0,s.jsx)(h,{type:w})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m,{type:w}),(0,s.jsx)(_,{type:w})]})],tokenIconsMap:[(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g,{type:"map"}),(0,s.jsx)(_,{type:"map"})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g,{type:"map"}),(0,s.jsx)(h,{type:"map"})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m,{type:"map"}),(0,s.jsx)(h,{type:"map"})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m,{type:"map"}),(0,s.jsx)(_,{type:"map"})]})],tokenNames:["Solana ISC","Solana Bridge ISC","Ethereum Bridge ISC","Ethereum ISC"]},ethToSol:{activePrompts:["You're swapping","You're Bridging","You're swapping"],inactivePrompts:["To Receive","To Solana","To Receive"],tokenIcons:[(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m,{type:w}),(0,s.jsx)(_,{type:w})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m,{type:w}),(0,s.jsx)(h,{type:w})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g,{type:w}),(0,s.jsx)(h,{type:w})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g,{type:w}),(0,s.jsx)(_,{type:w})]})],tokenIconsMap:[(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m,{type:"map"}),(0,s.jsx)(_,{type:"map"})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(m,{type:"map"}),(0,s.jsx)(h,{type:"map"})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g,{type:"map"}),(0,s.jsx)(h,{type:"map"})]}),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(g,{type:"map"}),(0,s.jsx)(_,{type:"map"})]})],tokenNames:["Ethereum ISC","Ethereum Bridge ISC","Solana Bridge ISC","Solana ISC"],activeTokens:[(0,s.jsx)(s.Fragment,{children:"Token Card 1"}),(0,s.jsx)(s.Fragment,{children:"Token Card 2"}),(0,s.jsx)(s.Fragment,{children:"Token Card 3"})],inactiveTokens:[(0,s.jsx)(s.Fragment,{children:"Token Card 1"}),(0,s.jsx)(s.Fragment,{children:"Token Card 2"}),(0,s.jsx)(s.Fragment,{children:"Token Card 3"})]}},b=n(34713);let x=(0,o.createContext)(),T=(0,o.createContext)(),v=(0,o.createContext)();var C=n(59917);let j=(0,o.createContext)();var S=JSON.parse('{"evm0":{"type":"evm","wormholeChainId":2,"rpc":"http://34.64.155.127/evm0","privateKey":"0x4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d","publicKey":"0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1","bridgeAddress":"0xC89Ce4735882C9F0f0FE26686c53074E09B0D550","tokenBridgeAddress":"0x0290FB167208Af455bB137780163b7B7a9a10C16","isc":"0xD13ebb5C39fB00C06122827E1cbD389930C9E0E3","xoil":"0x789733c6Cfd5EAa6c27bEAfD8bB7AF20aBe28500","swap_contract":"0x8914a9E5C5E234fDC3Ce9dc155ec19F43947ab59","decimals":9},"evm1":{"type":"evm","wormholeChainId":4,"rpc":"http://34.64.155.127/evm1","privateKey":"0x4f3edf983ac636a65a842ce7c78d9aa706d3b113bce9c46f30d7d21715b23b1d","publicKey":"0x90F8bf6A479f320ead074411a4B0e7944Ea8c9C1","tokenBridgeAddress":"0x0290FB167208Af455bB137780163b7B7a9a10C16","bridgeAddress":"0xC89Ce4735882C9F0f0FE26686c53074E09B0D550","testToken":"0x2D8BE6BF0baA74e0A907016679CaE9190e80dD0A","wrappedToken":"0xb39706ffb0CF1FB0657459FF6bC5002954672AD1","decimals":9},"solana":{"type":"solana","wormholeChainId":1,"rpc":"http://34.64.155.127/solanaVm","privateKey":[71,50,29,33,210,143,244,24,141,16,66,62,164,82,200,191,134,253,235,135,20,248,255,205,196,70,30,62,21,178,220,119,209,91,18,240,18,254,121,178,128,233,133,89,63,9,131,236,92,247,18,201,88,239,98,253,8,161,64,183,96,11,226,196],"tokenBridgeAddress":"B6RHG3mfcckmrYN1UhmJzyS1XX3fZKbkeUcpJe9Sy3FE","bridgeAddress":"Bridge1p5gheXUvJ6jGWGeCsgPKgnE3YgdGKRVCMY9o","testToken":"HXvmV3WGGpAqnehA5ah18b3bpsDApFqXrFvgqVW6dCX3","swap_contract":"7JAUAovyJHXsvqJkeXmjiTUpWTBADiFPagmkgj2Y2s47","isc":"C2Jgz6DdupWkdhMpxdZRSy8LL7m9ZFDnUn4tsgPv2H7k","oil":"HXvmV3WGGpAqnehA5ah18b3bpsDApFqXrFvgqVW6dCX3","spl_ata_program_id":"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL","wormhole_oil_ata":"HyH8B7TFd2Ez8pTysxcgMFSHY1SrJaDL91xz3MjpkmoR","decimals":9},"wormhole":{"restAddress":"http://34.64.155.127/wormholeVm"}}');let k=f.buttonPrompts;var I=()=>{let{step:e,currStep:t}=(0,o.useContext)(c),{amount:n}=(0,o.useContext)(j),{balance:a}=(0,o.useContext)(x),{direction:i}=(0,o.useContext)(T),{application:r}=(0,o.useContext)(v),{saveBalance:p}=(0,o.useContext)(x),{connected:u}=(0,y.O)(),{active:d,library:m}=(0,b.Ge)(),_=new C.Connection(S.solana.rpc,"processed"),h=(0,y.O)(),[g,w]=(0,o.useState)(k.swap),[f,I]=(0,o.useState)(!1);(0,o.useEffect)(()=>{switch(e){case 1:("solToEth"==i?u:d)?void 0!==a&&n>0?n<=a[0].solana?(w(k.swap+" ".concat(n," ISC")),I(!0)):(w(k.tooMuch),I(!1)):(w(k.noAmount),I(!1)):(w("solToEth"==i?k.sol:k.eth),I(!1));return;case 2:u?d?void 0!==a&&n>0?n<=a[1].solana?(w(k.bridge+" ".concat(n," ISC")),I(!0)):(w(k.tooMuch),I(!1)):(w(k.noAmount),I(!1)):(w(k.eth),I(!1)):(w(k.sol),I(!1));return;case 3:("solToEth"==i?d:u)?void 0!==a&&n>0?n<=a[1].ethereum?(w(k.swap+" ".concat(n," ISC")),I(!0)):(w(k.tooMuch),I(!1)):(w(k.noAmount),I(!1)):(w("solToEth"==i?k.eth:k.sol),I(!1));return}},[n,a,e,t,d,u,i]);let A=async()=>{let e,t;e="solToEth"===i?await r.solana_swap.swap_isc_to_oil(n):await r.solana_swap.swap_oil_to_isc(n);try{t=await h.sendTransaction(e,_,{commitment:"processed"}),console.log(t),await _.confirmTransaction(t,"confirmed")}catch(e){console.log(e)}await r.updateBalance(p)},N=async()=>{let e,t,s;let a=await r.wormhole.send_from_solana(n);I(!1);try{w("Sending ISC to Wormhole..."),e=await h.sendTransaction(a,_,{commitment:"finalized"})}catch(e){console.log(e)}await _.confirmTransaction(e);try{w("Fetching VAA..."),t=await r.wormhole.get_vaa_bytes_solana(e)}catch(e){console.log(e)}console.log(t);let i=m.getSigner();try{w("Requesting ISC from Wormhole..."),s=await r.wormhole.complete_transfer_on_eth(t,i),console.log(s),await r.ethereum_swap.wait_until_finalized({hash:s})}catch(e){console.log(e)}w("Bridging Complete!"),await r.updateBalance(p)},B=async()=>{let e,t,s;try{I(!1),w("Sending ISC to Wormhole..."),e=await r.wormhole.send_from_ethereum(n),console.log(e)}catch(e){console.log(e)}try{w("Fetching VAA..."),t=await r.wormhole.get_vaa_bytes_ethereum(e),console.log(t)}catch(e){console.log(e)}try{w("Requesting ISC from Wormhole..."),s=await r.wormhole.complete_transfer_on_solana(t.vaaBytes),console.log(s),w("Bridging Complete")}catch(e){console.log(e)}await r.updateBalance(p),I(!0)},M=async()=>{let e;try{e="solToEth"===i?await r.ethereum_swap.swap_oil_to_isc(n):await r.ethereum_swap.swap_isc_to_oil(n)}catch(e){console.log(e)}console.log(e),await r.updateBalance(p)};return!0==f?(0,s.jsx)("button",{type:"button",onClick:()=>{if("solToEth"===i)switch(e){case 1:console.log("Handling Swap 1"),A();return;case 2:console.log("Handling Bridge"),N();return;case 3:console.log("Handling Swap 2"),M()}else switch(e){case 1:console.log("Handling Swap 1"),M();return;case 2:console.log("Handling Bridge"),B();return;case 3:console.log("Handling Swap 2"),A()}},className:l().ActionButton,children:(0,s.jsx)("p",{children:g})}):(0,s.jsx)("button",{type:"button",className:l().ActionButtonInactive,children:(0,s.jsx)("p",{children:g})})},A=()=>(0,s.jsx)("img",{src:"./wallet.svg",alt:"wallet icon",className:l().WalletIcon});let N=(0,o.createContext)();var B=()=>{let{step:e}=(0,o.useContext)(c),{balance:t}=(0,o.useContext)(x),{maxAmounts:n}=(0,o.useContext)(N),{direction:a}=(0,o.useContext)(T);return(0,o.useEffect)(()=>{console.log("updated")},[n]),(0,s.jsxs)("div",{className:l().inputTitle,children:[(0,s.jsx)("div",{children:f["".concat(a)].activePrompts[e-1]}),(0,s.jsxs)("div",{className:l().maxDisplay,children:[(0,s.jsx)(A,{}),(0,s.jsx)("div",{children:n[e-1]+" "+f["".concat(a)].tokenNames[e-1]}),(0,s.jsx)("button",{children:"Max"})]})]})},M=()=>{let{amount:e,saveAmount:t}=(0,o.useContext)(j);return(0,o.useEffect)(()=>{console.log(e)},[e]),(0,s.jsx)("input",{placeholder:"0.00",onChange:e=>{t(e.target.value)}})},E=e=>{let{active:t}=e,{step:n}=(0,o.useContext)(c),{direction:a}=(0,o.useContext)(T);return(0,s.jsxs)("div",{className:l().v2TokenCard,children:[(0,s.jsx)("div",{className:l().iconsWrapper,children:t?f["".concat(a)].tokenIcons[n-1]:f["".concat(a)].tokenIcons[n]}),(0,s.jsx)("p",{className:l().tokenCardText,children:t?f["".concat(a)].tokenNames[n-1]:f["".concat(a)].tokenNames[n]})]})},P=()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{className:l().activeInputTitle,children:(0,s.jsx)(B,{})}),(0,s.jsx)("div",{className:l().ActiveInput,children:(0,s.jsxs)("div",{className:l().inputField,children:[(0,s.jsx)(E,{active:!0}),(0,s.jsx)(M,{})]})})]}),F=()=>{let{step:e}=(0,o.useContext)(c),{direction:t}=(0,o.useContext)(T),{balance:n}=(0,o.useContext)(x),{maxAmounts:a}=(0,o.useContext)(N);return(0,s.jsxs)("div",{className:l().inputTitle,children:[(0,s.jsx)("div",{children:f["".concat(t)].inactivePrompts[e-1]}),(0,s.jsxs)("div",{className:l().maxDisplay,children:[(0,s.jsx)(A,{}),(0,s.jsx)("div",{children:a[e]+" "+f["".concat(t)].tokenNames[e]})]})]})},O=()=>{let[e,t]=(0,o.useState)(),{amount:n}=(0,o.useContext)(j);return(0,o.useEffect)(()=>{t(n)},[n]),(0,s.jsx)(s.Fragment,{children:(0,s.jsx)("input",{placeholder:"0.00",value:e||void 0})})},D=()=>(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("div",{className:l().InactiveInputTitle,children:(0,s.jsx)(F,{})}),(0,s.jsx)("div",{className:l().InactiveInput,children:(0,s.jsxs)("div",{className:l().inputField,children:[(0,s.jsx)(E,{active:!1}),(0,s.jsx)(O,{})]})})]}),W=e=>{let{type:t}=e;switch(t){case"map":return(0,s.jsx)("img",{className:l().mapIcon,src:"./new/ArrowInCircle.svg",alt:""});case"swap":return(0,s.jsx)("img",{className:l().swapIcon,src:"./new/ArrowInCircle.svg",alt:""})}},K=()=>(0,s.jsx)("div",{className:l().CardBody,children:(0,s.jsxs)("div",{className:l().CardBodyInner,children:[(0,s.jsx)(P,{}),(0,s.jsx)(W,{type:"swap"}),(0,s.jsx)(D,{}),(0,s.jsx)(I,{})]})}),L=()=>{let{direction:e}=(0,o.useContext)(T),{step:t}=(0,o.useContext)(c),[n,a]=(0,o.useState)(f["".concat(e)].tokenNames);(0,o.useEffect)(()=>{a(f["".concat(e)].tokenNames)},[e]);let i=[(0,s.jsxs)("p",{children:["Swap ",(0,s.jsx)("span",{className:l().underlined,children:n[0]})," for ",(0,s.jsx)("span",{className:l().underlined,children:n[1]})]}),(0,s.jsxs)("p",{children:["Bridge ",(0,s.jsx)("span",{className:l().underlined,children:n[1]})," to ".concat("solToEth"==e?"Ethereum":"Solana")]}),(0,s.jsxs)("p",{children:["Swap ",(0,s.jsx)("span",{className:l().underlined,children:n[2]})," for ",(0,s.jsx)("span",{className:l().underlined,children:n[3]})]})];return(0,s.jsx)("p",{className:l().MapInfo,children:i[t-1]})},H=e=>{let{direction:t}=e;switch(t){case 0:default:return(0,s.jsx)("img",{className:"".concat(l().MapArrow," ").concat(l().turn0),src:"./new/arrow.png",alt:"arrow"});case 90:return(0,s.jsx)("img",{className:"".concat(l().MapArrow," ").concat(l().turn90),src:"./new/arrow.png",alt:"arrow"});case 180:return(0,s.jsx)("img",{className:"".concat(l().MapArrow," ").concat(l().turn180),src:"./new/arrow.png",alt:"arrow"});case 270:return(0,s.jsx)("img",{className:"".concat(l().MapArrow," ").concat(l().turn270),src:"./new/arrow.png",alt:"arrow"})}},R=e=>{let{index:t}=e,{direction:n}=(0,o.useContext)(T),[a,i]=(0,o.useState)(f["".concat(n)].tokenNames),[r,c]=(0,o.useState)(f["".concat(n)].tokenIconsMap);return(0,o.useEffect)(()=>{i(f["".concat(n)].tokenNames),c(f["".concat(n)].tokenIconsMap)},[n]),(0,s.jsxs)("div",{className:l().v2TokenCardMap,children:[(0,s.jsx)("div",{className:l().iconsWrapper,children:r[t-1]}),(0,s.jsx)("p",{className:l().tokenCardText,children:a[t-1]})]})},U=()=>{let{step:e}=(0,o.useContext)(c),t=[!1,!1,!1,!1].map((t,n)=>n==e-1||n==e),n=e=>t[e]?l().opacity1:l().opacity02,a=t=>e==t?l().opacity1:l().opacity02;return(0,s.jsxs)("div",{className:l().Map,children:[(0,s.jsxs)("div",{className:l().mapCards,children:[" ",(0,s.jsx)("div",{className:n(0),children:(0,s.jsx)(R,{index:1})}),(0,s.jsx)("div",{className:a(1),children:(0,s.jsx)(H,{direction:0})}),(0,s.jsx)("div",{className:n(1),children:(0,s.jsx)(R,{index:2})})]}),(0,s.jsxs)("div",{className:l().mapCentre,children:[" ",(0,s.jsx)("div",{className:a(2),children:(0,s.jsx)(H,{direction:270})})]}),(0,s.jsxs)("div",{className:l().mapCards,children:[" ",(0,s.jsx)("div",{className:n(3),children:(0,s.jsx)(R,{index:4})}),(0,s.jsx)("div",{className:a(3),children:(0,s.jsx)(H,{direction:180})}),(0,s.jsx)("div",{className:n(2),children:(0,s.jsx)(R,{index:3})})]})]})},q=()=>(0,s.jsx)("div",{className:l().CardMap,children:(0,s.jsxs)("div",{className:l().mapInner,children:[(0,s.jsx)(U,{}),(0,s.jsx)(L,{})]})}),G=e=>{let{step:t,currStep:n}=e,[a,i]=(0,o.useState)(0);return(0,s.jsx)(c.Provider,{value:{step:t,currStep:n},children:(0,s.jsx)(j.Provider,{value:{amount:a,saveAmount:e=>{i(e)}},children:(0,s.jsxs)("div",{className:l().v2Card,children:[(0,s.jsx)(d,{}),(0,s.jsx)(q,{}),(0,s.jsx)(K,{})]})})})},X=n(25532),V=class{print_module(){console.log("Printing from myModule",this.value)}constructor(){this.value=50}},z=n(79911),Y=n(61438),J=n(64146),Z=JSON.parse('{"Mt":[{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint32","name":"nonce","type":"uint32"}],"name":"attestToken","outputs":[{"internalType":"uint64","name":"sequence","type":"uint64"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"chainId_","type":"uint16"}],"name":"bridgeContracts","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"chainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"encodedVm","type":"bytes"}],"name":"completeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"encodedVm","type":"bytes"}],"name":"completeTransferAndUnwrapETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"encodedVm","type":"bytes"}],"name":"completeTransferAndUnwrapETHWithPayload","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"encodedVm","type":"bytes"}],"name":"completeTransferWithPayload","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"encodedVm","type":"bytes"}],"name":"createWrapped","outputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"governanceActionIsConsumed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governanceChainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"governanceContract","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"impl","type":"address"}],"name":"isInitialized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"hash","type":"bytes32"}],"name":"isTransferCompleted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"isWrappedAsset","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"}],"name":"outstandingBridged","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenImplementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint16","name":"recipientChain","type":"uint16"},{"internalType":"bytes32","name":"recipient","type":"bytes32"},{"internalType":"uint256","name":"arbiterFee","type":"uint256"},{"internalType":"uint32","name":"nonce","type":"uint32"}],"name":"transferTokens","outputs":[{"internalType":"uint64","name":"sequence","type":"uint64"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint16","name":"recipientChain","type":"uint16"},{"internalType":"bytes32","name":"recipient","type":"bytes32"},{"internalType":"uint32","name":"nonce","type":"uint32"},{"internalType":"bytes","name":"payload","type":"bytes"}],"name":"transferTokensWithPayload","outputs":[{"internalType":"uint64","name":"sequence","type":"uint64"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes","name":"encodedVm","type":"bytes"}],"name":"updateWrapped","outputs":[{"internalType":"address","name":"token","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"recipientChain","type":"uint16"},{"internalType":"bytes32","name":"recipient","type":"bytes32"},{"internalType":"uint256","name":"arbiterFee","type":"uint256"},{"internalType":"uint32","name":"nonce","type":"uint32"}],"name":"wrapAndTransferETH","outputs":[{"internalType":"uint64","name":"sequence","type":"uint64"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"recipientChain","type":"uint16"},{"internalType":"bytes32","name":"recipient","type":"bytes32"},{"internalType":"uint32","name":"nonce","type":"uint32"},{"internalType":"bytes","name":"payload","type":"bytes"}],"name":"wrapAndTransferETHWithPayload","outputs":[{"internalType":"uint64","name":"sequence","type":"uint64"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint16","name":"tokenChainId","type":"uint16"},{"internalType":"bytes32","name":"tokenAddress","type":"bytes32"}],"name":"wrappedAsset","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}]}'),Q=n(31692),$=n(94399),ee=n(26091),et=n(7873),en=n(30505),es=n(88312),ea=n(93692),ei=n(58467),eo=n(48764).Buffer,er=class{async attest_from_solana(){let e=this.config.solana;if(!e)throw Error("Network not defined in config file.");let t=new C.Connection(e.rpc,"confirmed"),n=Uint8Array.from(this.config.solana.privateKey),s=C.Keypair.fromSecretKey(n),a=await (0,Q.gN)(t,e.bridgeAddress,e.tokenBridgeAddress,s.publicKey.toString(),e.testToken);a.partialSign(s);let i=await t.sendRawTransaction(a.serialize());await t.confirmTransaction(i);let o=await t.getTransaction(i),r=(0,$.JE)(o),l=(0,ee.t8)(e.tokenBridgeAddress),c="".concat(this.config.wormhole.restAddress,"/v1/signed_vaa/",1,"/").concat(l,"/").concat(r);console.log("Searching for: ",c),console.log(l),console.log(r);let p=await (await fetch(c)).json();for(;!p.vaaBytes;)console.log("VAA not found, retrying in 5s!"),await new Promise(e=>setTimeout(e,5e3)),p=await (await fetch(c)).json();console.log("Bytes found"),console.log(p),this.deployment.push(p.vaaBytes),console.log("Solana Network Emitted VAA: ",p.vaaBytes);let u=this.config.evm0,d=new z.Wallet(this.config.evm0.privateKey).connect(new Y.r6(u.rpc)),y=new J.CH(u.tokenBridgeAddress,Z.Mt,d);await y.createWrapped(eo.from(p.vaaBytes,"base64"),{gasLimit:2e6}),console.log("Waiting for 5 seconds"),await new Promise(e=>setTimeout(e,5e3));let m=await y.wrappedAsset(e.wormholeChainId,eo.from((0,et.kF)(e.testToken,"solana"),"hex"));console.log("Wrapped token created at: ",m),this.wrappedTestTokenAddressFromSolana=m}findAssociatedTokenAddress(e,t){return C.PublicKey.findProgramAddressSync([e.toBuffer(),ei.H_.toBuffer(),t.toBuffer()],this.SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID)[0]}async send_from_solana(e){let t=e*10**this.config.solana.decimals;console.log("BIG AMOUNT:  ",t),this.wallets.solana,console.log("works til' here");let n=eo.from((0,et.kF)(this.wallets[0]._address,"ethereum"),"hex");console.log(this.wallets.ethereum),console.log("works til' here");let s=await (0,en.eS)(this.connection,this.config.solana.bridgeAddress,this.config.solana.tokenBridgeAddress,this.wallets[1].publicKey.toString(),this.user_oil_ata,this.config.solana.testToken,t,n,this.config.evm0.wormholeChainId);return console.log("works til return"),s}async get_vaa_bytes_solana(e){let t=await this.connection.getTransaction(e),n=(0,$.JE)(t),s=(0,ee.t8)(this.config.solana.tokenBridgeAddress),a="".concat(this.config.wormhole.restAddress,"/v1/signed_vaa/",1,"/").concat(s,"/").concat(n);console.log("Searching for: ",a);let i=await (await fetch(a)).json();for(;!i.vaaBytes;)console.log("VAA not found, retrying in 5s!"),await new Promise(e=>setTimeout(e,5e3)),i=await (await fetch(a)).json();return console.log("Bytes found"),console.log(i),i}async complete_transfer_on_eth(e,t){console.log(t);let n=new J.CH(this.config.evm0.tokenBridgeAddress,Z.Mt,t),s=await n.completeTransfer(eo.from(e.vaaBytes,"base64"));return s}async complete_transfer_on_eth_resume(e,t){console.log(t);let n=new J.CH(this.config.evm0.tokenBridgeAddress,Z.Mt,t),s=await n.completeTransfer(eo.from(e,"base64"));return s}async await_tx_completion_eth(e){let t=await e.wait();return console.log("Complete Transfer TX: ",t.transactionHash),t.transactionHash}async bridge_from_solana(e){let t=await this.send_from_solana(e);console.log(t);let n=await this.get_vaa_bytes_solana(t);console.log(n);let s=await this.complete_transfer_on_eth(n);return console.log(s),s}async send_from_ethereum(e){e*=10**this.config.evm0.decimals;let t=this.config.evm0,n=this.config.solana,s=eo.from((0,et.kF)(this.user_oil_ata,"solana"),"hex"),a=this.wallets[0],i=await (0,en.YC)(t.tokenBridgeAddress,t.xoil,a,e);console.log("Approval limit set",i.transactionHash);let o=await (0,en.qC)(t.tokenBridgeAddress,a,t.xoil,e,n.wormholeChainId,s);return console.log("Finished transferring from ETH",o.transactionHash),o}async get_vaa_bytes_ethereum(e){let t=(0,$.N_)(e,this.config.evm0.bridgeAddress),n=(0,ee.Nz)(this.config.evm0.tokenBridgeAddress),s="".concat(this.config.wormhole.restAddress,"/v1/signed_vaa/").concat(this.config.evm0.wormholeChainId,"/").concat(n,"/").concat(t);console.log("Searching for: ",s);let a=await (await fetch(s)).json();for(;!a.vaaBytes;)console.log("VAA not found, retrying in 5s!"),await new Promise(e=>setTimeout(e,5e3)),a=await (await fetch(s)).json();return console.log("Bytes found"),console.log(a),a}async complete_transfer_on_solana(e){let t=this.wallets[1];console.log(t);let n=await (0,es.n0)(this.connection,async e=>(console.log("signing tx"),e=await t.signTransaction(e)),this.config.solana.bridgeAddress,t.publicKey.toString(),eo.from(e,"base64"),10);console.log("Posted VAA to Solana \n",n[0].signature,"\n",n[1].signature);let s=await (0,ea.A7)(this.connection,this.config.solana.bridgeAddress,this.config.solana.tokenBridgeAddress,t.publicKey.toString(),eo.from(e,"base64"));console.log("ready to send");let a=await t.signTransaction(s);return console.log(n=await this.connection.sendRawTransaction(a.serialize())),console.log("Token redeemed",n),n}async bridge_to_solana(e){let t=await this.send_from_ethereum(e),n=await this.get_vaa_bytes_ethereum(t),s=await this.complete_transfer_on_solana(n);return s}constructor(e,t){this.acc_info=null,this.config=e,this.wallets=t,this.SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID=new C.PublicKey(e.solana.spl_ata_program_id),this.programId=new C.PublicKey(this.config.solana.swap_contract),this.isc=new C.PublicKey(this.config.solana.isc),this.oil=new C.PublicKey(this.config.solana.oil),this.connection=new C.Connection(S.solana.rpc,"confirmed"),this.options={commitment:"processed"},this.deployment=[],this.wrappedTestTokenAddressFromSolana=null,null!==this.wallets[1].publicKey&&(this.user_oil_ata=this.findAssociatedTokenAddress(this.wallets[1].publicKey,this.oil).toString())}},el=JSON.parse('{"M":[{"constant":true,"inputs":[],"name":"name","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_spender","type":"address"},{"name":"_value","type":"uint256"}],"name":"approve","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_from","type":"address"},{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transferFrom","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"}],"name":"balanceOf","outputs":[{"name":"balance","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_to","type":"address"},{"name":"_value","type":"uint256"}],"name":"transfer","outputs":[{"name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_owner","type":"address"},{"name":"_spender","type":"address"}],"name":"allowance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"payable":true,"stateMutability":"payable","type":"fallback"},{"anonymous":false,"inputs":[{"indexed":true,"name":"owner","type":"address"},{"indexed":true,"name":"spender","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"from","type":"address"},{"indexed":true,"name":"to","type":"address"},{"indexed":false,"name":"value","type":"uint256"}],"name":"Transfer","type":"event"}]}'),ec=JSON.parse('{"M":[{"inputs":[{"internalType":"address","name":"_xOilToken","type":"address"},{"internalType":"address","name":"_nativeToken","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"caller","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"bool","name":"toNativeToken","type":"bool"}],"name":"swap_event","type":"event"},{"inputs":[],"name":"nativeToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bool","name":"toNativeToken","type":"bool"}],"name":"swap","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"xOilToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"}]}'),ep=class{async print_balance(){if(this.signer){let e=await this.xOILContract.balanceOf(this.signer._address);console.log("User OIL:",e=e.toBigInt()),console.log("User ISC:",e=(e=await this.ISCTokenContract.balanceOf(this.signer._address)).toBigInt()),console.log("Swap OIL:",e=(e=await this.xOILContract.balanceOf(this.config.swap_contract)).toBigInt()),console.log("Swap ISC:",e=(e=await this.ISCTokenContract.balanceOf(this.config.swap_contract)).toBigInt()),console.log("------------------")}}async fetch_balance(){if(this.signer){console.log(this.signer);let e=await this.ISCTokenSigner.balanceOf(this.signer._address),t=await this.xOILContract.balanceOf(this.signer._address),n=await this.ISCTokenContract.balanceOf(this.config.swap_contract),s=await this.xOILContract.balanceOf(this.config.swap_contract);return{user_isc:e/10**this.config.decimals,user_oil:t/10**this.config.decimals,pool_isc:n/10**this.config.decimals,pool_oil:s/10**this.config.decimals}}}async swap_back_and_forth(){let e=await this.SwapSigner.swap(1,!0,{from:this.config.publicKey}),t=await this.provider.getTransactionReceipt(e.hash);for(;!(t&&t.blockNumber);)await new Promise(e=>setTimeout(e,50)),t=await this.provider.getTransactionReceipt(e.hash),console.log("Waiting for block confirmation");for(console.log(e),await this.print_balance(),e=await this.SwapSigner.swap(1,!1,{from:this.config.publicKey}),t=await this.provider.getTransactionReceipt(e.hash);!(t&&t.blockNumber);)await new Promise(e=>setTimeout(e,50)),t=await this.provider.getTransactionReceipt(e.hash),console.log("Waiting for block confirmation");await this.print_balance()}async wait_until_finalized(e){let t=await this.provider.getTransactionReceipt(e.hash);for(;!(t&&t.blockNumber);)await new Promise(e=>setTimeout(e,500)),t=await this.provider.getTransactionReceipt(e.hash),console.log("Waiting for block confirmation")}async swap(e,t){let n=await this.SwapSigner.swap(e,t,{from:this.signer.account});return await this.wait_until_finalized(n),n}async swap_oil_to_isc(e){e*=10**this.config.decimals;let t=await this.xOILSigner.approve(this.config.swap_contract,e);return await this.wait_until_finalized(t),console.log(t=await this.swap(e,!0)),t}async approve_oil_to_isc(e){return(await this.xOILSigner.approve(this.config.swap_contract,e))()}async swap_isc_to_oil(e){e*=10**this.config.decimals;let t=await this.ISCTokenSigner.approve(this.config.swap_contract,e);return await this.wait_until_finalized(t),t=await this.swap(e,!1)}async mint_isc(e){e*=10**this.config.decimals;let t=await this.ISCTokenSigner.mint(this.config.swap_contract,e);await this.wait_until_finalized(t)}async burn(e){e*=10**this.config.decimals;let t=await this.ISCTokenSigner.burn(e);await this.wait_until_finalized(t)}constructor(e,t){this.config=e.evm0,this.erc20_json_abi=el.M,this.swap_abi=ec.M,this.provider=new Y.r6(S.evm0.rpc),null!==t&&(this.signer=t,this.SwapContract=new J.CH(this.config.swap_contract,this.swap_abi,t),this.xOILContract=new J.CH(this.config.xoil,this.erc20_json_abi,t),this.ISCTokenContract=new J.CH(this.config.isc,this.erc20_json_abi,t),this.SwapSigner=this.SwapContract,this.xOILSigner=this.xOILContract,this.ISCTokenSigner=this.ISCTokenContract)}},eu=n(48764).Buffer;class ed{constructor(e,t){this.instruction=e,this.amount=t}}var ey=class{async hello(){console.log("Hello")}async fetch_balance(){if(null!==this.signer.publicKey){this.updateAccounts();let e=await this.connection.getTokenAccountBalance(this.user_isc_ata,"processed"),t=await this.connection.getTokenAccountBalance(this.user_oil_ata,"processed"),n=await this.connection.getTokenAccountBalance(this.pda_isc_ata,"processed"),s=await this.connection.getTokenAccountBalance(this.pda_oil_ata,"processed"),a=await this.connection.getBalance(this.signer.publicKey,"processed");return{user_isc:e.value.uiAmount,user_oil:t.value.uiAmount,pool_isc:n.value.uiAmount,pool_oil:s.value.uiAmount,user_sol:a/1e9}}}findAssociatedTokenAddress(e,t){return C.PublicKey.findProgramAddressSync([e.toBuffer(),ei.H_.toBuffer(),t.toBuffer()],this.SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID)[0]}updateAccounts(){if(null!==this.signer.publicKey){let e=this.signer.publicKey,t=this.findAssociatedTokenAddress(this.signer.publicKey,this.isc),n=this.findAssociatedTokenAddress(this.signer.publicKey,this.oil),s=this.programId,a=C.PublicKey.findProgramAddressSync([eu.from("oolaa")],this.programId)[0],i=this.findAssociatedTokenAddress(a,this.isc),o=this.findAssociatedTokenAddress(a,this.oil),r=this.isc,l=this.oil,c=ei.H_,p=this.SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,u=C.SystemProgram.programId;this.user_isc_ata=t,this.user_oil_ata=n,this.pda_isc_ata=i,this.pda_oil_ata=o,this.acc_info=[{pubkey:e,isSigner:!0,isWritable:!0},{pubkey:t,isSigner:!1,isWritable:!0},{pubkey:n,isSigner:!1,isWritable:!0},{pubkey:s,isSigner:!1,isWritable:!1},{pubkey:a,isSigner:!1,isWritable:!1},{pubkey:i,isSigner:!1,isWritable:!0},{pubkey:o,isSigner:!1,isWritable:!0},{pubkey:r,isSigner:!1,isWritable:!1},{pubkey:l,isSigner:!1,isWritable:!1},{pubkey:c,isSigner:!1,isWritable:!1},{pubkey:p,isSigner:!1,isWritable:!1},{pubkey:u,isSigner:!1,isWritable:!1}]}}async createTransaction(e){let t=X.serialize(this.schema,e),n=new C.Transaction,s=new C.TransactionInstruction({keys:this.acc_info,programId:this.programId,data:t});n.add(s);let a=await this.connection.getLatestBlockhash();return n.recentBlockhash=a.blockhash,n}async swap_isc_to_oil(e){let t=e*10**this.config.decimals,n=new ed(0,t);return await this.createTransaction(n)}async swap_oil_to_isc(e){let t=e*10**this.config.decimals,n=new ed(1,t);return await this.createTransaction(n)}async send_transaction(e){}constructor(e,t){this.signer=t,this.acc_info=null,this.config=e.solana,this.SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID=new C.PublicKey(this.config.spl_ata_program_id),this.programId=new C.PublicKey(this.config.swap_contract),this.isc=new C.PublicKey(this.config.isc),this.oil=new C.PublicKey(this.config.oil),this.user_isc_ata=null,this.user_oil_ata=null,this.pda_isc_ata=null,this.pda_oil_ata=null,this.updateAccounts(),this.connection=new C.Connection(S.solana.rpc),this.options={commitment:"processed"},this.updateAccounts(),this.schema=new Map([[ed,{kind:"struct",fields:[["instruction","u8"],["amount","u64"]]}]])}},em=class{async updateBalance(e){if(this.ethSigner._address&&this.solSigner.publicKey){let t=await this.solana_swap.fetch_balance(),n=await this.ethereum_swap.fetch_balance(),s=[];s.push({item:"User ISC",solana:t.user_isc,ethereum:n.user_isc}),s.push({item:"User OIL",solana:t.user_oil,ethereum:n.user_oil}),s.push({item:"Pool ISC",solana:t.pool_isc,ethereum:n.pool_isc}),s.push({item:"Pool OIL",solana:t.pool_oil,ethereum:n.pool_oil}),s.push({item:"User SOL",solana:t.user_sol,ethereum:0}),e(s)}else if(null!==this.ethSigner._address&&null==this.solSigner.publicKey){let t=await this.ethereum_swap.fetch_balance(),n=[];n.push({item:"User ISC",ethereum:t.user_isc}),n.push({item:"User OIL",ethereum:t.user_oil}),n.push({item:"Pool ISC",ethereum:t.pool_isc}),n.push({item:"Pool OIL",ethereum:t.pool_oil}),n.push({item:"User SOL",ethereum:0}),e(n)}else if(null==this.ethSigner._address&&null!==this.solSigner.publicKey){let t=await this.solana_swap.fetch_balance(),n=[];n.push({item:"User ISC",solana:t.user_isc}),n.push({item:"User OIL",solana:t.user_oil}),n.push({item:"Pool ISC",solana:t.pool_isc}),n.push({item:"Pool OIL",solana:t.pool_oil}),n.push({item:"User SOL",solana:t.user_sol}),e(n)}}print_balance(){console.log(this.solana_swap.fetch_balance())}constructor(e,t){this.value=100,this.exter_module=new V,this.ethSigner=e,this.solSigner=t,this.solana_swap=new ey(S,this.solSigner),this.wormhole=new er(S,[e,t]),this.ethereum_swap=new ep(S,this.ethSigner)}},e_=(e,t)=>{if("solToEth"==t){let t=[];return t.push(e[0].solana),t.push(e[1].solana),t.push(e[1].ethereum),t.push(e[0].ethereum),t}{let t=[];return t.push(e[0].ethereum),t.push(e[1].ethereum),t.push(e[1].solana),t.push(e[0].solana),t}},eh=()=>{let{application:e,saveApplication:t}=(0,o.useContext)(v),{direction:n,saveDirection:a}=(0,o.useContext)(T),{balance:i,saveBalance:r}=(0,o.useContext)(x),{saveMaxAmounts:c}=(0,o.useContext)(N),[p,u]=(0,o.useState)(1),d=(0,b.Ge)(),{active:m,library:_}=(0,b.Ge)(),h=(0,y.O)(),{connected:g}=(0,y.O)();(0,o.useEffect)(()=>{(m||g)&&(console.log("updating ETHsigners"),console.log(_),m?t(new em(_.getSigner(d.account),h)):t(new em(d,h)))},[m,g]),(0,o.useEffect)(()=>{let t=async()=>{await e.updateBalance(r)};void 0!=e&&t()},[e]),(0,o.useEffect)(()=>{if(console.log(i),void 0!=i){console.log("updating");let e=e_(i,n);c(e)}},[i,n]);let w=[1,2,3].map(e=>(0,s.jsx)(G,{step:e,currStep:p},e));return(0,o.useEffect)(()=>{console.log(n)},[n]),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)("button",{onClick:()=>{p-1>0?u(p-1):console.log()},children:"Step Up"}),(0,s.jsx)("button",{onClick:()=>{p+1<4?u(p+1):console.log()},children:"Step Down"}),(0,s.jsx)("button",{type:"button",onClick:()=>{a("solToEth")},children:"Sol To Eth"}),(0,s.jsx)("button",{type:"button",onClick:()=>{a("ethToSol")},children:"Eth To Sol"}),(0,s.jsx)("div",{className:l().v2App,children:w})]})},eg=n(32671),ew=n(17622),ef=n(45604),eb=n(80783);n(22985);var ex=e=>{let{children:t}=e,n=C.clusterApiUrl("devnet"),a=[new eb.x];return(0,s.jsx)(eg.U,{endpoint:n,children:(0,s.jsx)(ew.n,{wallets:a,children:(0,s.jsx)(ef.s,{children:t})})})},eT=n(16009),ev=n(49857);let eC=new ev._k;function ej(){let{activate:e,active:t,account:n,deactivate:a}=(0,b.Ge)(),i=async()=>{try{await e(eC)}catch(e){console.log(e)}},o=async()=>{if(t)try{a()}catch(e){console.log(e)}};return t?(0,s.jsxs)("button",{className:l().MetaMaskButton,onClick:o,type:"button",children:[(0,s.jsx)("img",{src:"MetaMask_Fox.svg"}),"Disconnect ",n.substring(0,4),"..",n.substring(38)]}):(0,s.jsxs)("button",{className:l().MetaMaskButton,onClick:i,type:"button",children:[(0,s.jsx)("img",{src:"MetaMask_Fox.svg"}),"Connect"]})}function eS(){return(0,s.jsxs)("header",{className:l().header,children:[(0,s.jsxs)("div",{className:l().headerInfo,children:[(0,s.jsx)("img",{src:"./ISC-logo.svg",height:50,className:l().logo}),(0,s.jsx)("h1",{children:"ISC BRIDGE"})]}),(0,s.jsxs)("div",{className:l().walletContainer,children:[(0,s.jsx)(eT.a,{}),(0,s.jsx)(ej,{})]})]})}var ek=n(241);function eI(){return(0,s.jsxs)("div",{className:l().ldsellipsis,children:[(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{}),(0,s.jsx)("div",{})]})}var eA=()=>{let[e,t]=(0,o.useState)([(0,s.jsx)(eI,{}),(0,s.jsx)(eI,{}),(0,s.jsx)(eI,{}),(0,s.jsx)(eI,{})]),[n,a]=(0,o.useState)(),[r,c]=(0,o.useState)("solToEth"),[p,u]=(0,o.useState)();return(0,s.jsx)(b.Ht,{getLibrary:e=>new ek.Q(e),children:(0,s.jsx)(ex,{children:(0,s.jsx)(T.Provider,{value:{direction:r,saveDirection:e=>{c(e)}},children:(0,s.jsx)(x.Provider,{value:{balance:n,saveBalance:e=>{a(e)}},children:(0,s.jsx)(N.Provider,{value:{maxAmounts:e,saveMaxAmounts:e=>{t(e)}},children:(0,s.jsx)(v.Provider,{value:{application:p,saveApplication:e=>{u(e)}},children:(0,s.jsxs)("main",{className:i().className,children:[(0,s.jsx)(eS,{}),(0,s.jsx)("div",{className:l().body,children:(0,s.jsx)(eh,{})})]})})})})})})})}},32129:function(e){e.exports={App:"mystyle_App__ziR5w",SwapCard:"mystyle_SwapCard__o2Veq",requestConn:"mystyle_requestConn__bIr1k",requestDirection:"mystyle_requestDirection__gDw3t",innerRequestDirection:"mystyle_innerRequestDirection__NmTpe",DirSelectorIcons:"mystyle_DirSelectorIcons__fI3R5",innerRequestConn:"mystyle_innerRequestConn__ipLS_",UI:"mystyle_UI__0pkYc",header:"mystyle_header__3k0jr",logo:"mystyle_logo__kMbn_",headerInfo:"mystyle_headerInfo__eLfaX",walletContainer:"mystyle_walletContainer__Esaut",MetaMaskButton:"mystyle_MetaMaskButton__Ym4_N",sidebar:"mystyle_sidebar__HS9EK",BridgeApp:"mystyle_BridgeApp__sy9l_",plan:"mystyle_plan__osoUh",table_container:"mystyle_table_container__Y_v8T",table:"mystyle_table__xkv5Z",main:"mystyle_main__Dzxcv",background:"mystyle_background__bRLok",info:"mystyle_info__yD1cH",inner:"mystyle_inner___X7AL",pricing:"mystyle_pricing__YYlri",title:"mystyle_title__6iW29",cardData:"mystyle_cardData__bMybl",copyButton:"mystyle_copyButton__h7_Ng",features:"mystyle_features__f9Xw8",icon:"mystyle_icon__bbs7x",action:"mystyle_action__0dAzd",button:"mystyle_button__32g8X",action_waiting:"mystyle_action_waiting__n8O48",skip:"mystyle_skip__165w_",resumeStep:"mystyle_resumeStep__s3hP4",resumeP:"mystyle_resumeP__GDB0I",resumeOk:"mystyle_resumeOk__nn4Lf",resumeBtns:"mystyle_resumeBtns__WGK_z",resumeClose:"mystyle_resumeClose__wKPEr",resumeSubmit:"mystyle_resumeSubmit__yoTIY",resumePrompt:"mystyle_resumePrompt__ZJ2yi",button_disabled:"mystyle_button_disabled__6SGHS",ldsellipsis:"mystyle_ldsellipsis__hu4vS",ldsellipsis1:"mystyle_ldsellipsis1__K_sP8",ldsellipsis2:"mystyle_ldsellipsis2__9ESgV",ldsellipsis3:"mystyle_ldsellipsis3__62GU4",card:"mystyle_card__atOxy",form:"mystyle_form__L22J_",MyTable:"mystyle_MyTable___urFd",card_line:"mystyle_card_line__jP8Eu",SwapTitle:"mystyle_SwapTitle__ZIiCV",SwapMax:"mystyle_SwapMax__XZFrL",maxWalletIcon:"mystyle_maxWalletIcon__U5Ov_",outputField:"mystyle_outputField__cIndB",sendInput:"mystyle_sendInput__u9vWx",inputField:"mystyle_inputField__jpTdS",tokenCard:"mystyle_tokenCard__deIk3",CardSwapUi:"mystyle_CardSwapUi__U3URp",flex:"mystyle_flex__329by",text_end:"mystyle_text_end__Qfu0k",flex_col:"mystyle_flex_col__DdftE",swap_input:"mystyle_swap_input__ZebPF",noDisplay:"mystyle_noDisplay__XJQII",BackToTop:"mystyle_BackToTop__ILXgq",returnDirection:"mystyle_returnDirection__LYxof",returnDirectionIcon:"mystyle_returnDirectionIcon__QQNbW",Progressbar:"mystyle_Progressbar__DtzNK",body:"mystyle_body__2UNTL",opacity1:"mystyle_opacity1__NFOGq",opacity02:"mystyle_opacity02__R9hsl",underlined:"mystyle_underlined__sJO9O",turn0:"mystyle_turn0__PXsTe",turn90:"mystyle_turn90__ostcN",turn180:"mystyle_turn180__QB3cR",turn270:"mystyle_turn270__oSu_X",mapIcon:"mystyle_mapIcon__Mp9jJ",swapIcon:"mystyle_swapIcon__iCY3P",ActiveInput:"mystyle_ActiveInput__qY7dI",InactiveInput:"mystyle_InactiveInput__1ZuN8",v2App:"mystyle_v2App__kGLn3",v2Card:"mystyle_v2Card__G65If",v2TokenCardMap:"mystyle_v2TokenCardMap__gdnrR",iconsWrapper:"mystyle_iconsWrapper__PThLH",tokenCardText:"mystyle_tokenCardText__FBn_o",CardTitle:"mystyle_CardTitle__ld33L",TitleHeading:"mystyle_TitleHeading__vdFSL",greyText:"mystyle_greyText___Qr3r",CardMap:"mystyle_CardMap__XeqLx",mapInner:"mystyle_mapInner__4i_dL",Map:"mystyle_Map__BRhYt",MapArrow:"mystyle_MapArrow__zwi7M",mapCards:"mystyle_mapCards__lfc82",mapCentre:"mystyle_mapCentre__f0CQZ",MapInfo:"mystyle_MapInfo__dX_vD",CardBody:"mystyle_CardBody__cXlj4",CardBodyInner:"mystyle_CardBodyInner__PQKX1",ActionButton:"mystyle_ActionButton__i68eH",ActionButtonInactive:"mystyle_ActionButtonInactive__FQuxy",inputTitle:"mystyle_inputTitle__AtW_7",maxDisplay:"mystyle_maxDisplay__EhAo0",v2TokenCard:"mystyle_v2TokenCard__EElea"}},46601:function(){},89214:function(){},85568:function(){},34845:function(){},52361:function(){},94616:function(){},33370:function(){},55024:function(){}},function(e){e.O(0,[774,655,644,662,160,882,766,213,888,179],function(){return e(e.s=45728)}),_N_E=e.O()}]);